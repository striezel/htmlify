name: MSYS2

on: push

jobs:
  msys2:
    strategy:
      fail-fast: false
      matrix:
        include:
          - msystem: mingw64
            package: x86_64
          - msystem: ucrt64
            package: ucrt-x86_64
    runs-on: windows-2022
    defaults:
      run:
        shell: msys2 {0}
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: 'recursive'
          persist-credentials: false
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.msystem}}
          update: true
          install: >-
            git
            mingw-w64-${{matrix.package}}-cmake
            mingw-w64-${{matrix.package}}-gcc
            mingw-w64-${{matrix.package}}-ninja
            mingw-w64-${{matrix.package}}-pkg-config
            mingw-w64-${{matrix.package}}-libiconv
      - name: Build
        run: |
          export MSYSTEM=$(echo ${{matrix.msystem}} | tr '[:lower:]' '[:upper:]')
          export CXX=g++
          export CC=gcc
          cd "$GITHUB_WORKSPACE"
          mkdir build
          cd build
          cmake ../
          cmake --build . -j2
          ctest -V
      - name: Build statically linked
        run: |
          export MSYSTEM=$(echo ${{matrix.msystem}} | tr '[:lower:]' '[:upper:]')
          export CXX=g++
          export CC=gcc
          cd "$GITHUB_WORKSPACE"
          mkdir build-static
          cd build-static
          cmake -DENABLE_LTO=ON -DENABLE_STATIC_LINKING=ON ../
          cmake --build . -j2
      - name: Collect statically linked artifacts
        run: |
          export MSYSTEM=$(echo ${{matrix.msystem}} | tr '[:lower:]' '[:upper:]')
          cd "$GITHUB_WORKSPACE"
          mkdir -p "$GITHUB_WORKSPACE"/artifacts
          # binary file
          cp build-static/htmlify/htmlify.exe artifacts/
          # license + readme
          cp LICENSE artifacts/
          cp readme.md artifacts/
          # determine version
          VERSION=$(git describe --always)
          echo Version is $VERSION.
          mv artifacts htmlify-$VERSION
          "C:\Program Files\7-Zip\7z.exe" a -r htmlify_${VERSION}_win64.zip htmlify-$VERSION
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: htmlify-msys2-${{matrix.msystem}}
          path: htmlify_*_win64.zip
          if-no-files-found: error
